create table "public"."short_url_providers" (
    "id" bigint generated by default as identity not null,
    "provider" text not null
);


alter table "public"."short_url_providers" enable row level security;

alter table "public"."short_urls" add column "provider_id" bigint;

alter table "public"."url_info" add column "favicon" text;

alter table "public"."url_info" add column "metadata" json;

alter table "public"."url_info" add column "screenshot" text;

CREATE UNIQUE INDEX short_url_providers_pkey ON public.short_url_providers USING btree (id);

CREATE UNIQUE INDEX short_url_providers_provider_key ON public.short_url_providers USING btree (provider);

alter table "public"."short_url_providers" add constraint "short_url_providers_pkey" PRIMARY KEY using index "short_url_providers_pkey";

alter table "public"."short_url_providers" add constraint "short_url_providers_provider_key" UNIQUE using index "short_url_providers_provider_key";

alter table "public"."short_urls" add constraint "short_urls_provider_id_fkey" FOREIGN KEY (provider_id) REFERENCES short_url_providers(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."short_urls" validate constraint "short_urls_provider_id_fkey";

grant delete on table "public"."short_url_providers" to "anon";

grant insert on table "public"."short_url_providers" to "anon";

grant references on table "public"."short_url_providers" to "anon";

grant select on table "public"."short_url_providers" to "anon";

grant trigger on table "public"."short_url_providers" to "anon";

grant truncate on table "public"."short_url_providers" to "anon";

grant update on table "public"."short_url_providers" to "anon";

grant delete on table "public"."short_url_providers" to "authenticated";

grant insert on table "public"."short_url_providers" to "authenticated";

grant references on table "public"."short_url_providers" to "authenticated";

grant select on table "public"."short_url_providers" to "authenticated";

grant trigger on table "public"."short_url_providers" to "authenticated";

grant truncate on table "public"."short_url_providers" to "authenticated";

grant update on table "public"."short_url_providers" to "authenticated";

grant delete on table "public"."short_url_providers" to "service_role";

grant insert on table "public"."short_url_providers" to "service_role";

grant references on table "public"."short_url_providers" to "service_role";

grant select on table "public"."short_url_providers" to "service_role";

grant trigger on table "public"."short_url_providers" to "service_role";

grant truncate on table "public"."short_url_providers" to "service_role";

grant update on table "public"."short_url_providers" to "service_role";

create policy "Enable insert for authenticated users only"
on "public"."short_url_providers"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."short_url_providers"
as permissive
for select
to public
using (true);



