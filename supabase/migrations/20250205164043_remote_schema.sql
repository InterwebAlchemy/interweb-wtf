create table "public"."short_urls" (
    "id" bigint generated by default as identity not null,
    "url" text not null,
    "slug" text not null,
    "created_by" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "pending" boolean not null default true
);


alter table "public"."short_urls" enable row level security;

create table "public"."tags" (
    "id" bigint generated by default as identity not null,
    "tag" text not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."tags" enable row level security;

create table "public"."url_info" (
    "id" bigint generated by default as identity not null,
    "url_id" bigint not null,
    "title" text not null,
    "description" text,
    "snapshot" text,
    "last_updated" timestamp with time zone not null default now()
);


alter table "public"."url_info" enable row level security;

create table "public"."url_reports" (
    "id" bigint generated by default as identity not null,
    "url_id" bigint not null,
    "cloudflare_scan_results" text,
    "ready" boolean not null default false,
    "last_scanned" timestamp with time zone not null default now()
);


alter table "public"."url_reports" enable row level security;

create table "public"."url_stats" (
    "id" bigint generated by default as identity not null,
    "url_id" bigint not null,
    "hits" bigint not null default '0'::bigint,
    "inspects" bigint not null default '0'::bigint,
    "flags" bigint not null default '0'::bigint,
    "last_updated" timestamp with time zone not null default now()
);


alter table "public"."url_stats" enable row level security;

create table "public"."url_tags" (
    "id" bigint generated by default as identity not null,
    "url_id" bigint not null,
    "tag_id" bigint not null,
    "tagged_at" timestamp with time zone not null default now()
);


alter table "public"."url_tags" enable row level security;

CREATE UNIQUE INDEX short_urls_pkey ON public.short_urls USING btree (id);

CREATE UNIQUE INDEX short_urls_slug_key ON public.short_urls USING btree (slug);

CREATE UNIQUE INDEX url_info_pkey ON public.url_info USING btree (id);

CREATE UNIQUE INDEX url_reports_pkey ON public.url_reports USING btree (id);

CREATE UNIQUE INDEX url_stats_pkey ON public.url_stats USING btree (id);

CREATE UNIQUE INDEX url_stats_url_id_key ON public.url_stats USING btree (url_id);

CREATE UNIQUE INDEX url_tags_pkey ON public.tags USING btree (id);

CREATE UNIQUE INDEX url_tags_pkey1 ON public.url_tags USING btree (id);

CREATE UNIQUE INDEX url_tags_tag_key ON public.tags USING btree (tag);

alter table "public"."short_urls" add constraint "short_urls_pkey" PRIMARY KEY using index "short_urls_pkey";

alter table "public"."tags" add constraint "url_tags_pkey" PRIMARY KEY using index "url_tags_pkey";

alter table "public"."url_info" add constraint "url_info_pkey" PRIMARY KEY using index "url_info_pkey";

alter table "public"."url_reports" add constraint "url_reports_pkey" PRIMARY KEY using index "url_reports_pkey";

alter table "public"."url_stats" add constraint "url_stats_pkey" PRIMARY KEY using index "url_stats_pkey";

alter table "public"."url_tags" add constraint "url_tags_pkey1" PRIMARY KEY using index "url_tags_pkey1";

alter table "public"."short_urls" add constraint "short_urls_created_by_fkey" FOREIGN KEY (created_by) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."short_urls" validate constraint "short_urls_created_by_fkey";

alter table "public"."short_urls" add constraint "short_urls_slug_key" UNIQUE using index "short_urls_slug_key";

alter table "public"."tags" add constraint "url_tags_tag_key" UNIQUE using index "url_tags_tag_key";

alter table "public"."url_info" add constraint "url_info_url_id_fkey" FOREIGN KEY (url_id) REFERENCES short_urls(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."url_info" validate constraint "url_info_url_id_fkey";

alter table "public"."url_reports" add constraint "url_reports_url_id_fkey" FOREIGN KEY (url_id) REFERENCES short_urls(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."url_reports" validate constraint "url_reports_url_id_fkey";

alter table "public"."url_stats" add constraint "url_stats_url_id_fkey" FOREIGN KEY (url_id) REFERENCES short_urls(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."url_stats" validate constraint "url_stats_url_id_fkey";

alter table "public"."url_stats" add constraint "url_stats_url_id_key" UNIQUE using index "url_stats_url_id_key";

alter table "public"."url_tags" add constraint "url_tags_tag_id_fkey" FOREIGN KEY (tag_id) REFERENCES tags(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."url_tags" validate constraint "url_tags_tag_id_fkey";

alter table "public"."url_tags" add constraint "url_tags_url_id_fkey" FOREIGN KEY (url_id) REFERENCES short_urls(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."url_tags" validate constraint "url_tags_url_id_fkey";

grant delete on table "public"."short_urls" to "anon";

grant insert on table "public"."short_urls" to "anon";

grant references on table "public"."short_urls" to "anon";

grant select on table "public"."short_urls" to "anon";

grant trigger on table "public"."short_urls" to "anon";

grant truncate on table "public"."short_urls" to "anon";

grant update on table "public"."short_urls" to "anon";

grant delete on table "public"."short_urls" to "authenticated";

grant insert on table "public"."short_urls" to "authenticated";

grant references on table "public"."short_urls" to "authenticated";

grant select on table "public"."short_urls" to "authenticated";

grant trigger on table "public"."short_urls" to "authenticated";

grant truncate on table "public"."short_urls" to "authenticated";

grant update on table "public"."short_urls" to "authenticated";

grant delete on table "public"."short_urls" to "service_role";

grant insert on table "public"."short_urls" to "service_role";

grant references on table "public"."short_urls" to "service_role";

grant select on table "public"."short_urls" to "service_role";

grant trigger on table "public"."short_urls" to "service_role";

grant truncate on table "public"."short_urls" to "service_role";

grant update on table "public"."short_urls" to "service_role";

grant delete on table "public"."tags" to "anon";

grant insert on table "public"."tags" to "anon";

grant references on table "public"."tags" to "anon";

grant select on table "public"."tags" to "anon";

grant trigger on table "public"."tags" to "anon";

grant truncate on table "public"."tags" to "anon";

grant update on table "public"."tags" to "anon";

grant delete on table "public"."tags" to "authenticated";

grant insert on table "public"."tags" to "authenticated";

grant references on table "public"."tags" to "authenticated";

grant select on table "public"."tags" to "authenticated";

grant trigger on table "public"."tags" to "authenticated";

grant truncate on table "public"."tags" to "authenticated";

grant update on table "public"."tags" to "authenticated";

grant delete on table "public"."tags" to "service_role";

grant insert on table "public"."tags" to "service_role";

grant references on table "public"."tags" to "service_role";

grant select on table "public"."tags" to "service_role";

grant trigger on table "public"."tags" to "service_role";

grant truncate on table "public"."tags" to "service_role";

grant update on table "public"."tags" to "service_role";

grant delete on table "public"."url_info" to "anon";

grant insert on table "public"."url_info" to "anon";

grant references on table "public"."url_info" to "anon";

grant select on table "public"."url_info" to "anon";

grant trigger on table "public"."url_info" to "anon";

grant truncate on table "public"."url_info" to "anon";

grant update on table "public"."url_info" to "anon";

grant delete on table "public"."url_info" to "authenticated";

grant insert on table "public"."url_info" to "authenticated";

grant references on table "public"."url_info" to "authenticated";

grant select on table "public"."url_info" to "authenticated";

grant trigger on table "public"."url_info" to "authenticated";

grant truncate on table "public"."url_info" to "authenticated";

grant update on table "public"."url_info" to "authenticated";

grant delete on table "public"."url_info" to "service_role";

grant insert on table "public"."url_info" to "service_role";

grant references on table "public"."url_info" to "service_role";

grant select on table "public"."url_info" to "service_role";

grant trigger on table "public"."url_info" to "service_role";

grant truncate on table "public"."url_info" to "service_role";

grant update on table "public"."url_info" to "service_role";

grant delete on table "public"."url_reports" to "anon";

grant insert on table "public"."url_reports" to "anon";

grant references on table "public"."url_reports" to "anon";

grant select on table "public"."url_reports" to "anon";

grant trigger on table "public"."url_reports" to "anon";

grant truncate on table "public"."url_reports" to "anon";

grant update on table "public"."url_reports" to "anon";

grant delete on table "public"."url_reports" to "authenticated";

grant insert on table "public"."url_reports" to "authenticated";

grant references on table "public"."url_reports" to "authenticated";

grant select on table "public"."url_reports" to "authenticated";

grant trigger on table "public"."url_reports" to "authenticated";

grant truncate on table "public"."url_reports" to "authenticated";

grant update on table "public"."url_reports" to "authenticated";

grant delete on table "public"."url_reports" to "service_role";

grant insert on table "public"."url_reports" to "service_role";

grant references on table "public"."url_reports" to "service_role";

grant select on table "public"."url_reports" to "service_role";

grant trigger on table "public"."url_reports" to "service_role";

grant truncate on table "public"."url_reports" to "service_role";

grant update on table "public"."url_reports" to "service_role";

grant delete on table "public"."url_stats" to "anon";

grant insert on table "public"."url_stats" to "anon";

grant references on table "public"."url_stats" to "anon";

grant select on table "public"."url_stats" to "anon";

grant trigger on table "public"."url_stats" to "anon";

grant truncate on table "public"."url_stats" to "anon";

grant update on table "public"."url_stats" to "anon";

grant delete on table "public"."url_stats" to "authenticated";

grant insert on table "public"."url_stats" to "authenticated";

grant references on table "public"."url_stats" to "authenticated";

grant select on table "public"."url_stats" to "authenticated";

grant trigger on table "public"."url_stats" to "authenticated";

grant truncate on table "public"."url_stats" to "authenticated";

grant update on table "public"."url_stats" to "authenticated";

grant delete on table "public"."url_stats" to "service_role";

grant insert on table "public"."url_stats" to "service_role";

grant references on table "public"."url_stats" to "service_role";

grant select on table "public"."url_stats" to "service_role";

grant trigger on table "public"."url_stats" to "service_role";

grant truncate on table "public"."url_stats" to "service_role";

grant update on table "public"."url_stats" to "service_role";

grant delete on table "public"."url_tags" to "anon";

grant insert on table "public"."url_tags" to "anon";

grant references on table "public"."url_tags" to "anon";

grant select on table "public"."url_tags" to "anon";

grant trigger on table "public"."url_tags" to "anon";

grant truncate on table "public"."url_tags" to "anon";

grant update on table "public"."url_tags" to "anon";

grant delete on table "public"."url_tags" to "authenticated";

grant insert on table "public"."url_tags" to "authenticated";

grant references on table "public"."url_tags" to "authenticated";

grant select on table "public"."url_tags" to "authenticated";

grant trigger on table "public"."url_tags" to "authenticated";

grant truncate on table "public"."url_tags" to "authenticated";

grant update on table "public"."url_tags" to "authenticated";

grant delete on table "public"."url_tags" to "service_role";

grant insert on table "public"."url_tags" to "service_role";

grant references on table "public"."url_tags" to "service_role";

grant select on table "public"."url_tags" to "service_role";

grant trigger on table "public"."url_tags" to "service_role";

grant truncate on table "public"."url_tags" to "service_role";

grant update on table "public"."url_tags" to "service_role";

create policy "Enable delete for users based on user_id"
on "public"."short_urls"
as permissive
for delete
to public
using ((( SELECT auth.uid() AS uid) = created_by));


create policy "Enable insert for authenticated users only"
on "public"."short_urls"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable users to update their own data only"
on "public"."short_urls"
as permissive
for update
to authenticated
using ((( SELECT auth.uid() AS uid) = created_by));


create policy "Enable users to view their own data only"
on "public"."short_urls"
as permissive
for select
to authenticated
using ((( SELECT auth.uid() AS uid) = created_by));


create policy "Enable insert for authenticated users only"
on "public"."tags"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."tags"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."url_info"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."url_info"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."url_reports"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."url_reports"
as permissive
for select
to public
using (true);



